

  {
    "questions": [
      {
        "level": "Easy",
        "answ3": "Because requirements change frequently and render the document quickly outdated.",
        "answ4": "Because it is not compatible with agile principles.",
        "answ1": "Because it is costly to create.",
        "answ2": "Because it requires too much pre-delivery analysis.",
        "right": 3,
        "content": "Why do many agile methods argue against producing a requirements document?"
      },
      {
        "level": "Hard",
        "answ3": "Critical systems requiring extensive pre-delivery analysis.",
        "answ4": "Systems with rapidly changing requirements.",
        "answ1": "Business systems with stable requirements.",
        "answ2": "Systems developed by a single team.",
        "right": 3,
        "content": "In what scenarios might using user stories for requirements be problematic?"
      },
      {
        "level": "Medium",
        "answ3": "They may be the basis for a bid for a contract and also the basis for the contract itself.",
        "answ4": "They ensure compliance with industry standards and regulations.",
        "answ1": "They serve as a basis for project management and resource allocation.",
        "answ2": "They provide guidelines for system testing and validation.",
        "right": 3,
        "content": "What dual function do requirements typically serve?"
      },
      {
        "level": "Easy",
        "answ3": "As a specific software feature",
        "answ4": "As a formal contract between stakeholders",
        "answ1": "As a high-level abstract statement of a service or system constraint",
        "answ2": "As a detailed mathematical functional specification",
        "right": 1,
        "content": "How is a requirement defined?"
      },
      {
        "level": "Easy",
        "answ3": "Design review",
        "answ4": "Design inspection",
        "answ1": "Design evaluation",
        "answ2": "Design presentation",
        "right": 3,
        "content": "What is a formal, scheduled activity where a designer presents material about a design and peers evaluate the technical aspects?"
      },
      {
        "level": "Medium",
        "answ3": "Design assessments",
        "answ4": "Design reviews",
        "answ1": "Design evaluations",
        "answ2": "Design appraisals",
        "right": 4,
        "content": "What is the inclusive term used for reviews, walkthroughs, and inspections?"
      },
      {
        "level": "Medium",
        "answ3": "They are primarily used for algorithm optimization.",
        "answ4": "They are designed for low-level code implementation.",
        "answ1": "They focus solely on user interface design.",
        "answ2": "They are stylized descriptions based on tried and tested practices.",
        "right": 2,
        "content": "What distinguishes architectural patterns from other types of patterns in software engineering?"
      },
      {
        "level": "Hard",
        "answ3": "Examples of every instance where the pattern has been successfully implemented",
        "answ4": "Detailed implementation guidelines for specific programming languages",
        "answ1": "When it is and is not appropriate to use the pattern, and details on its strengths and weaknesses",
        "answ2": "A comprehensive list of all possible use cases for the pattern",
        "right": 1,
        "content": "What information should an architectural pattern provide?"
      },
      {
        "level": "Easy",
        "answ3": "Critical systems requiring extensive pre-delivery analysis.",
        "answ4": "Systems with rapidly changing requirements.",
        "answ1": "Business systems with stable requirements.",
        "answ2": "Systems developed by a single team.",
        "right": 3,
        "content": "In what scenarios might using user stories for requirements be problematic?"
      },
      {
        "level": "Medium",
        "answ3": "Because requirements change frequently and render the document quickly outdated.",
        "answ4": "Because it is not compatible with agile principles.",
        "answ1": "Because it requires too much pre-delivery analysis.",
        "answ2": "Because it is costly to create.",
        "right": 3,
        "content": "Why do many agile methods argue against producing a requirements document?"
      },

      {
        "level": "Medium",
        "answ3": "To ensure that the team stays focused on delivering value to the customer.",
        "answ4": "To minimize the need for documentation and meetings.",
        "answ1": "To promote close collaboration between cross-functional teams.",
        "answ2": "To establish a rigid plan that guides the entire project.",
        "right": 1,
        "content": "What is one of the primary goals of the daily stand-up meeting in Agile development?"
      }
   ,
      {
        "level": "Easy",
        "answ3": "Use case diagrams",
        "answ4": "Sequence diagrams",
        "answ1": "Activity diagrams",
        "answ2": "Class diagrams",
        "right": 2,
        "content": "Which diagram shows the interactions between a system and its environment?"
      },
      {
        "level": "Easy",
        "answ3": "Class diagrams",
        "answ4": "State diagrams",
        "answ1": "Use case diagrams",
        "answ2": "Sequence diagrams",
        "right": 3,
        "content": "Which diagram displays the object classes in the system and their associations?"
      },
      {
        "level": "Hard",
        "answ3": "To verify the internal structure, design, or implementation of the software.",
        "answ4": "To evaluate the functionality of individual units or components of the software.",
        "answ1": "To assess the behavior of the entire software system.",
        "answ2": "To ensure that the software meets specific performance criteria.",
        "right": 1,
        "content": "What is the primary objective of black-box testing?"
      }
    ]
  }
  